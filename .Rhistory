ROOT      <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/"
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- params --
MIN_K      <- 2
FIT_SPLINE <- TRUE
# -- sources --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_forest_plots.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_dr.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_tables.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_master.R")
# -- pipeline --
message("1) Load & harmonize …")
raw <- load_data(DATA_XLSX, sheet = SHEET)
message("2) Build pairwise contrasts (reference-aware) …")
contr <- build_pairwise_2x2(raw, ref_policies = default_ref_policies)
# (optionnel) audit LSD
# audit_doses(raw, contr, "LSD")
message("3) Escalc …")
es <- build_escalc(contr)
message("4) DR by molecule (all AE, all windows) …")
dr_mol <- run_dr_by_molecule(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
message("5) DR by AE (curves per molecule) …")
dr_ae  <- run_dr_by_ae(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
dir.create(file.path(ROOT, "tables"), recursive = TRUE, showWarnings = FALSE)
message("6) Save significance tables …")
save_significance_table(dr_mol$models, file.path(ROOT,"tables/significance_by_molecule_models.csv"))
save_significance_table(dr_ae$models,  file.path(ROOT,"tables/significance_by_ae_models.csv"))
save_agg_significance_by_molecule(dr_mol$models, file.path(ROOT,"tables/significance_agg_by_molecule.csv"))
save_agg_significance_by_ae_molecule(dr_ae$models,  file.path(ROOT,"tables/significance_agg_by_ae_molecule.csv"))
message("7) Forest plots …")
make_forest_plots(es, file.path(ROOT,"forest_plots"))
make_forest_plots_per_molecule_pdf(es, file.path(ROOT,"forest_plots_by_molecule"))
make_forest_summary_per_molecule(es, file.path(ROOT,"forest_plots_summary"))
message("8) Dose–response plots …")
plot_dr_by_molecule_split(dr_mol$preds, dr_mol$models, file.path(ROOT,"dose_response/by_molecule_split"))
plot_dr_per_molecule_across_ae_facets(dr_ae$preds, dr_ae$models, file.path(ROOT,"dose_response/by_molecule_facets"))
plot_dr_per_ae_normalized_dose(dr_ae$preds, file.path(ROOT,"dose_response/by_ae_normalized"))
message("MASTER PLOTS …")
# A) DR global par molécule
plot_master_dr_by_molecule(dr_mol$preds, file.path(ROOT,"master/master_dr_by_molecule.pdf"))
# B) Forest globaux (pooled par AE, facets par molécule)
plot_master_forest_by_molecule(es, file.path(ROOT,"master/master_forest_by_molecule.pdf"), min_k = 3)
# C) DR par AE (grille)
plot_master_dr_by_ae(
preds               = dr_ae$preds,
models              = dr_ae$models,
outfile             = file.path(ROOT, "master/master_dr_by_ae.pdf"),
max_ae_per_molecule = 20,
significant_only    = TRUE
)
message("MASTER PLOTS … done ✅")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/tables_for_paper.R")
make_all_paper_tables(
path_mol_agg    = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_molecule.csv",
path_ae_mol_agg = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_ae_molecule.csv",
path_models_ae  = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_by_ae_models.csv"
)
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/run_session_followup_and_compare.R")
run_session_followup_and_compare(
base_xlsx        = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx",
sheet            = "Feuil1",
out_root_session = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_session",
out_root_followup= "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_followup",
out_root_compare = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare",
min_k            = 2,
fit_spline       = TRUE
)
# ========= SESSION vs FOLLOW-UP: tables + comparison plots =========
suppressPackageStartupMessages({
library(dplyr); library(readr)
})
# -- Paths (adapt only if you moved the Excel) --
BASE_XLSX <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx"
SHEET     <- "Feuil1"
OUT_DIR_CMP <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare/tables"
# -- Source helpers (make sure these files exist with the versions we wrote) --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_window_tables.R")               # tables session/follow_up
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_compare_session_followup.R")   # DR overlay plots
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/forest_compare_session_followup.R")# forest side-by-side
# -- Reference priority (same as your main run) --
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- Helper to normalise window labels --
.norm_win <- function(x){
x <- as.character(x)
x <- tolower(x)
x <- gsub("[^a-z0-9]+", "_", x)  # non-alnum → underscore
x <- gsub("_+", "_", x)          # collapse multiple underscores
x <- sub("^_", "", x)            # trim leading underscore
x <- sub("_$", "", x)            # trim trailing underscore
x
}
# -- Build ES for a given window and tag it --
.build_es_for_window <- function(window_value){
raw_all <- load_data(BASE_XLSX, sheet = SHEET) %>%
dplyr::mutate(time_window = .norm_win(time_window))
if (!window_value %in% unique(raw_all$time_window)) {
stop("Window '", window_value, "' not found. Available: ",
paste(sort(unique(raw_all$time_window)), collapse=", "))
}
raw_win <- raw_all %>% dplyr::filter(time_window == window_value)
contr <- build_pairwise_2x2(raw_win, ref_policies = default_ref_policies)
es    <- build_escalc(contr)
es$time_window <- window_value
es
}
message("== Building ES for both windows …")
es_session  <- try(.build_es_for_window("session"))
es_followup <- try(.build_es_for_window("follow_up"))
es_all <- dplyr::bind_rows(
if (!inherits(es_session,  "try-error")) es_session,
if (!inherits(es_followup,"try-error"))  es_followup
)
if (!nrow(es_all)) stop("No ES rows after building session/follow_up.")
print(es_all %>% count(time_window))
# ---------- (A) Tables: per-window slopes + interaction ----------
dir.create(OUT_DIR_CMP, recursive = TRUE, showWarnings = FALSE)
out_tbls <- make_dr_window_tables(
es = es_all,
out_dir = OUT_DIR_CMP,
min_k_per_window = 2,   # require ≥2 contrasts per window/molecule
min_k_total      = 4    # require ≥4 total contrasts for the interaction test
)
message("Tables saved under: ", OUT_DIR_CMP)
# -> dr_per_window_by_molecule.csv (long)
# -> dr_per_window_by_molecule_wide.csv (session & follow_up side-by-side)
# -> dr_session_vs_followup_interaction.csv
# -> dr_session_followup_publication_table.csv
exists("plot_dr_per_molecule_across_ae_facets")
exists("plot_dr_per_ae_normalized_dose")
getAnywhere(plot_dr_per_molecule_across_ae_facets)
suppressPackageStartupMessages({
library(readxl)
library(dplyr)
library(stringr)
library(stringi)
library(writexl)
library(readr)
library(patchwork)
})
suppressPackageStartupMessages({ library(dplyr) })
# -- chemins --
DATA_XLSX <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5_session.xlsx"
SHEET     <- "Sheet1"
ROOT      <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_session/"
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- params --
MIN_K      <- 2
FIT_SPLINE <- TRUE
# -- sources --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_forest_plots.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_dr.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_tables.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_master.R")
# -- pipeline --
message("1) Load & harmonize …")
raw <- load_data(DATA_XLSX, sheet = SHEET)
message("2) Build pairwise contrasts (reference-aware) …")
contr <- build_pairwise_2x2(raw, ref_policies = default_ref_policies)
# (optionnel) audit LSD
# audit_doses(raw, contr, "LSD")
message("3) Escalc …")
es <- build_escalc(contr)
message("4) DR by molecule (all AE, all windows) …")
dr_mol <- run_dr_by_molecule(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
message("5) DR by AE (curves per molecule) …")
dr_ae  <- run_dr_by_ae(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
dir.create(file.path(ROOT, "tables"), recursive = TRUE, showWarnings = FALSE)
message("6) Save significance tables …")
save_significance_table(dr_mol$models, file.path(ROOT,"tables/significance_by_molecule_models.csv"))
save_significance_table(dr_ae$models,  file.path(ROOT,"tables/significance_by_ae_models.csv"))
save_agg_significance_by_molecule(dr_mol$models, file.path(ROOT,"tables/significance_agg_by_molecule.csv"))
save_agg_significance_by_ae_molecule(dr_ae$models,  file.path(ROOT,"tables/significance_agg_by_ae_molecule.csv"))
message("7) Forest plots …")
make_forest_plots(es, file.path(ROOT,"forest_plots"))
make_forest_plots_per_molecule_pdf(es, file.path(ROOT,"forest_plots_by_molecule"))
make_forest_summary_per_molecule(es, file.path(ROOT,"forest_plots_summary"))
message("8) Dose–response plots …")
plot_dr_by_molecule_split(dr_mol$preds, dr_mol$models, file.path(ROOT,"dose_response/by_molecule_split"))
plot_dr_per_molecule_across_ae_facets(dr_ae$preds, dr_ae$models, file.path(ROOT,"dose_response/by_molecule_facets"))
plot_dr_per_ae_normalized_dose(dr_ae$preds, file.path(ROOT,"dose_response/by_ae_normalized"))
message("MASTER PLOTS …")
# A) DR global par molécule
plot_master_dr_by_molecule(dr_mol$preds, file.path(ROOT,"master/master_dr_by_molecule.pdf"))
# B) Forest globaux (pooled par AE, facets par molécule)
plot_master_forest_by_molecule(es, file.path(ROOT,"master/master_forest_by_molecule.pdf"), min_k = 3)
# C) DR par AE (grille)
plot_master_dr_by_ae(
preds               = dr_ae$preds,
models              = dr_ae$models,
outfile             = file.path(ROOT, "master/master_dr_by_ae.pdf"),
max_ae_per_molecule = 20,
significant_only    = TRUE
)
message("MASTER PLOTS … done ✅")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/tables_for_paper.R")
make_all_paper_tables(
path_mol_agg    = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_molecule.csv",
path_ae_mol_agg = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_ae_molecule.csv",
path_models_ae  = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_by_ae_models.csv"
)
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/run_session_followup_and_compare.R")
run_session_followup_and_compare(
base_xlsx        = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx",
sheet            = "Feuil1",
out_root_session = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_session",
out_root_followup= "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_followup",
out_root_compare = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare",
min_k            = 2,
fit_spline       = TRUE
)
# ========= SESSION vs FOLLOW-UP: tables + comparison plots =========
suppressPackageStartupMessages({
library(dplyr); library(readr)
})
# -- Paths (adapt only if you moved the Excel) --
BASE_XLSX <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx"
SHEET     <- "Feuil1"
OUT_DIR_CMP <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare/tables"
# -- Source helpers (make sure these files exist with the versions we wrote) --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_window_tables.R")               # tables session/follow_up
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_compare_session_followup.R")   # DR overlay plots
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/forest_compare_session_followup.R")# forest side-by-side
# -- Reference priority (same as your main run) --
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- Helper to normalise window labels --
.norm_win <- function(x){
x <- as.character(x)
x <- tolower(x)
x <- gsub("[^a-z0-9]+", "_", x)  # non-alnum → underscore
x <- gsub("_+", "_", x)          # collapse multiple underscores
x <- sub("^_", "", x)            # trim leading underscore
x <- sub("_$", "", x)            # trim trailing underscore
x
}
# -- Build ES for a given window and tag it --
.build_es_for_window <- function(window_value){
raw_all <- load_data(BASE_XLSX, sheet = SHEET) %>%
dplyr::mutate(time_window = .norm_win(time_window))
if (!window_value %in% unique(raw_all$time_window)) {
stop("Window '", window_value, "' not found. Available: ",
paste(sort(unique(raw_all$time_window)), collapse=", "))
}
raw_win <- raw_all %>% dplyr::filter(time_window == window_value)
contr <- build_pairwise_2x2(raw_win, ref_policies = default_ref_policies)
es    <- build_escalc(contr)
es$time_window <- window_value
es
}
message("== Building ES for both windows …")
es_session  <- try(.build_es_for_window("session"))
es_followup <- try(.build_es_for_window("follow_up"))
es_all <- dplyr::bind_rows(
if (!inherits(es_session,  "try-error")) es_session,
if (!inherits(es_followup,"try-error"))  es_followup
)
if (!nrow(es_all)) stop("No ES rows after building session/follow_up.")
print(es_all %>% count(time_window))
# ---------- (A) Tables: per-window slopes + interaction ----------
dir.create(OUT_DIR_CMP, recursive = TRUE, showWarnings = FALSE)
out_tbls <- make_dr_window_tables(
es = es_all,
out_dir = OUT_DIR_CMP,
min_k_per_window = 2,   # require ≥2 contrasts per window/molecule
min_k_total      = 4    # require ≥4 total contrasts for the interaction test
)
message("Tables saved under: ", OUT_DIR_CMP)
# -> dr_per_window_by_molecule.csv (long)
# -> dr_per_window_by_molecule_wide.csv (session & follow_up side-by-side)
# -> dr_session_vs_followup_interaction.csv
# -> dr_session_followup_publication_table.csv
suppressPackageStartupMessages({
library(readxl)
library(dplyr)
library(stringr)
library(stringi)
library(writexl)
library(readr)
library(patchwork)
})
suppressPackageStartupMessages({ library(dplyr) })
# -- chemins --
DATA_XLSX <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5_follow_up.xlsx"
SHEET     <- "Sheet1"
ROOT      <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_followup/"
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- params --
MIN_K      <- 2
FIT_SPLINE <- TRUE
# -- sources --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_forest_plots.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_dr.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_tables.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_master.R")
# -- pipeline --
message("1) Load & harmonize …")
raw <- load_data(DATA_XLSX, sheet = SHEET)
message("2) Build pairwise contrasts (reference-aware) …")
contr <- build_pairwise_2x2(raw, ref_policies = default_ref_policies)
# (optionnel) audit LSD
# audit_doses(raw, contr, "LSD")
message("3) Escalc …")
es <- build_escalc(contr)
message("4) DR by molecule (all AE, all windows) …")
dr_mol <- run_dr_by_molecule(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
message("5) DR by AE (curves per molecule) …")
dr_ae  <- run_dr_by_ae(es, min_k = MIN_K, fit_spline = FIT_SPLINE)
dir.create(file.path(ROOT, "tables"), recursive = TRUE, showWarnings = FALSE)
message("6) Save significance tables …")
save_significance_table(dr_mol$models, file.path(ROOT,"tables/significance_by_molecule_models.csv"))
save_significance_table(dr_ae$models,  file.path(ROOT,"tables/significance_by_ae_models.csv"))
save_agg_significance_by_molecule(dr_mol$models, file.path(ROOT,"tables/significance_agg_by_molecule.csv"))
save_agg_significance_by_ae_molecule(dr_ae$models,  file.path(ROOT,"tables/significance_agg_by_ae_molecule.csv"))
message("7) Forest plots …")
make_forest_plots(es, file.path(ROOT,"forest_plots"))
make_forest_plots_per_molecule_pdf(es, file.path(ROOT,"forest_plots_by_molecule"))
make_forest_summary_per_molecule(es, file.path(ROOT,"forest_plots_summary"))
message("8) Dose–response plots …")
plot_dr_by_molecule_split(dr_mol$preds, dr_mol$models, file.path(ROOT,"dose_response/by_molecule_split"))
plot_dr_per_molecule_across_ae_facets(dr_ae$preds, dr_ae$models, file.path(ROOT,"dose_response/by_molecule_facets"))
plot_dr_per_ae_normalized_dose(dr_ae$preds, file.path(ROOT,"dose_response/by_ae_normalized"))
message("MASTER PLOTS …")
# A) DR global par molécule
plot_master_dr_by_molecule(dr_mol$preds, file.path(ROOT,"master/master_dr_by_molecule.pdf"))
# B) Forest globaux (pooled par AE, facets par molécule)
plot_master_forest_by_molecule(es, file.path(ROOT,"master/master_forest_by_molecule.pdf"), min_k = 3)
# C) DR par AE (grille)
plot_master_dr_by_ae(
preds               = dr_ae$preds,
models              = dr_ae$models,
outfile             = file.path(ROOT, "master/master_dr_by_ae.pdf"),
max_ae_per_molecule = 20,
significant_only    = TRUE
)
message("MASTER PLOTS … done ✅")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/tables_for_paper.R")
make_all_paper_tables(
path_mol_agg    = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_molecule.csv",
path_ae_mol_agg = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_agg_by_ae_molecule.csv",
path_models_ae  = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/tables/significance_by_ae_models.csv"
)
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/run_session_followup_and_compare.R")
run_session_followup_and_compare(
base_xlsx        = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx",
sheet            = "Feuil1",
out_root_session = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_session",
out_root_followup= "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_followup",
out_root_compare = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare",
min_k            = 2,
fit_spline       = TRUE
)
# ========= SESSION vs FOLLOW-UP: tables + comparison plots =========
suppressPackageStartupMessages({
library(dplyr); library(readr)
})
# -- Paths (adapt only if you moved the Excel) --
BASE_XLSX <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/data/Adverse-events-dose-v5.xlsx"
SHEET     <- "Feuil1"
OUT_DIR_CMP <- "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results_compare/tables"
# -- Source helpers (make sure these files exist with the versions we wrote) --
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/utils_data.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_dose_response.R")
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_window_tables.R")               # tables session/follow_up
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/dr_compare_session_followup.R")   # DR overlay plots
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/forest_compare_session_followup.R")# forest side-by-side
# -- Reference priority (same as your main run) --
default_ref_policies <- list(
MDMA       = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
LSD        = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
PSILOCYBIN = c("inactive_placebo","active_non_psy_placebo","active_placebo"),
AYAHUASCA  = c("inactive_placebo","active_placebo","active_non_psy_placebo"),
.default   = c("inactive_placebo","active_placebo","active_non_psy_placebo")
)
# -- Helper to normalise window labels --
.norm_win <- function(x){
x <- as.character(x)
x <- tolower(x)
x <- gsub("[^a-z0-9]+", "_", x)  # non-alnum → underscore
x <- gsub("_+", "_", x)          # collapse multiple underscores
x <- sub("^_", "", x)            # trim leading underscore
x <- sub("_$", "", x)            # trim trailing underscore
x
}
# -- Build ES for a given window and tag it --
.build_es_for_window <- function(window_value){
raw_all <- load_data(BASE_XLSX, sheet = SHEET) %>%
dplyr::mutate(time_window = .norm_win(time_window))
if (!window_value %in% unique(raw_all$time_window)) {
stop("Window '", window_value, "' not found. Available: ",
paste(sort(unique(raw_all$time_window)), collapse=", "))
}
raw_win <- raw_all %>% dplyr::filter(time_window == window_value)
contr <- build_pairwise_2x2(raw_win, ref_policies = default_ref_policies)
es    <- build_escalc(contr)
es$time_window <- window_value
es
}
message("== Building ES for both windows …")
es_session  <- try(.build_es_for_window("session"))
es_followup <- try(.build_es_for_window("follow_up"))
es_all <- dplyr::bind_rows(
if (!inherits(es_session,  "try-error")) es_session,
if (!inherits(es_followup,"try-error"))  es_followup
)
if (!nrow(es_all)) stop("No ES rows after building session/follow_up.")
print(es_all %>% count(time_window))
# ---------- (A) Tables: per-window slopes + interaction ----------
dir.create(OUT_DIR_CMP, recursive = TRUE, showWarnings = FALSE)
out_tbls <- make_dr_window_tables(
es = es_all,
out_dir = OUT_DIR_CMP,
min_k_per_window = 2,   # require ≥2 contrasts per window/molecule
min_k_total      = 4    # require ≥4 total contrasts for the interaction test
)
message("Tables saved under: ", OUT_DIR_CMP)
# -> dr_per_window_by_molecule.csv (long)
# -> dr_per_window_by_molecule_wide.csv (session & follow_up side-by-side)
# -> dr_session_vs_followup_interaction.csv
# -> dr_session_followup_publication_table.csv
# MULTIPLE FIGURES FOR DR CURVES
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_master.R")
# Generate the significant-only DR panels (AEs with ≥1 significant molecule)
plot_master_dr_significant_only(
preds   = dr_ae$preds,
models  = dr_ae$models,
outfile = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/master/master_dr_significant_only.pdf",
normalize_dose = TRUE,   # set FALSE if you prefer raw mg on x-axis
ncol = 3
)
# MULTIPLE FIGURES FOR DR CURVES
source("/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/scripts/analysis_plots_master.R")
# Generate the significant-only DR panels (AEs with ≥1 significant molecule)
plot_master_dr_significant_only(
preds   = dr_ae$preds,
models  = dr_ae$models,
outfile = "/Users/mickaeleskinazi/Documents/GitHub/metaanalysis-psychedelics/results/master/master_dr_significant_only.pdf",
normalize_dose = TRUE,   # set FALSE if you prefer raw mg on x-axis
ncol = 3
)
audit_sig_ae <- function(models_by_ae, es, min_k = 2, top_n = 20){
stopifnot(all(c("molecule","ae_term") %in% names(models_by_ae)))
# k per AE×molecule from ES
k_tab <- es %>%
dplyr::count(molecule, ae_term, name = "k")
# omnibus p per AE×molecule
out <- models_by_ae %>%
dplyr::group_by(molecule, ae_term) %>%
dplyr::summarise(
p_overall = {
qmp <- suppressWarnings(min(QMp[is.finite(QMp)], na.rm = TRUE))
if (is.finite(qmp)) qmp else {
suppressWarnings(min(pval[is.finite(pval) & !grepl("intrcpt", term, TRUE)], na.rm = TRUE))
}
},
.groups = "drop"
) %>%
dplyr::left_join(k_tab, by = c("molecule","ae_term")) %>%
dplyr::mutate(stars = dplyr::case_when(
is.na(p_overall) ~ "",
p_overall < 0.001 ~ "***",
p_overall < 0.01  ~ "**",
p_overall < 0.05  ~ "*",
TRUE ~ ""
)) %>%
dplyr::arrange(p_overall, dplyr::desc(k))
message("Top candidates by smallest p_overall:")
print(out %>% dplyr::slice_head(n = top_n))
invisible(out)
}
# Example:
audit <- audit_sig_ae(dr_ae$models, es, min_k = 2, top_n = 30)
View(audit)
View(audit)
